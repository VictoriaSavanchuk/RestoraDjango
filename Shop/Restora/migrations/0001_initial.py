# Generated by Django 4.2.4 on 2023-10-31 10:05

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CategoriesFood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Dishes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название блюда')),
                ('image', models.ImageField(upload_to='uploads', verbose_name='Изображение')),
                ('price', models.IntegerField(verbose_name='Стоимость')),
                ('cookingTime', models.IntegerField(verbose_name='Приготовление в минутах')),
                ('category', models.ForeignKey(default='Без категории', null=True, on_delete=django.db.models.deletion.SET_NULL, to='Restora.categoriesfood', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Блюдо',
                'verbose_name_plural': 'Блюда',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Номер заказа')),
                ('date', models.DateTimeField(blank=True, verbose_name='Дата заказа')),
                ('adress', models.CharField(max_length=70, verbose_name='Адрес')),
                ('price', models.FloatField(verbose_name='Цена')),
                ('payment', models.CharField(choices=[('cash', 'наличные'), ('card', 'картой')], default='card', max_length=10, verbose_name='Оплата')),
                ('delivery', models.CharField(choices=[('C', 'самовывоз'), ('D', 'доставка'), ('T', 'в ресторане')], default='D', max_length=1, verbose_name='Доставка')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Название')),
                ('amount', models.PositiveIntegerField(verbose_name='Количество')),
                ('unit', models.CharField(choices=[('KG', 'кг'), ('G', 'гр'), ('SHT', 'шт')], default='KG', max_length=5, verbose_name='Единица измерения')),
                ('pricePerUnit', models.FloatField(verbose_name='Цена за единицу')),
                ('expiration', models.CharField(max_length=20, verbose_name='Годность в месяцах')),
            ],
            options={
                'verbose_name': 'Продукт',
                'verbose_name_plural': 'Продукты',
            },
        ),
        migrations.CreateModel(
            name='Tables',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(unique=True, verbose_name='Номер')),
                ('numberOfSeats', models.PositiveIntegerField(verbose_name='Число мест')),
                ('availability', models.CharField(choices=[('A', 'Доступен'), ('B', 'Забронирован')], default='A', max_length=1, verbose_name='Доступность')),
            ],
            options={
                'verbose_name': 'Столик',
                'verbose_name_plural': 'Столики',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Имя')),
                ('phone', models.CharField(max_length=15, unique=True, validators=[django.core.validators.RegexValidator(regex='^(\\+375|80)-(29|25|44|33)-(\\d{3})(\\d{2})(\\d{2})$')], verbose_name='Телефон')),
                ('email', models.EmailField(max_length=254)),
                ('dateOfBirthday', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='Supply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(max_length=20, verbose_name='Поставщик')),
                ('dateOfDelivery', models.DateTimeField(verbose_name='Дата поставки')),
                ('dateOfExpiry', models.DateTimeField(verbose_name='Дата окончания срока годности')),
                ('quantity', models.PositiveIntegerField(verbose_name='Количество')),
                ('unit', models.CharField(choices=[('KG', 'кг'), ('G', 'гр'), ('SHT', 'шт'), ('L', 'л.')], default='KG', max_length=5, verbose_name='Единица измерения')),
                ('total', models.FloatField(verbose_name='Сумма')),
                ('status', models.CharField(choices=[('B', 'Испорчен'), ('G', 'Годен')], default='G', max_length=1, verbose_name='Статус')),
                ('product', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Restora.products', verbose_name='Продукты')),
            ],
            options={
                'verbose_name': 'Поставка',
                'verbose_name_plural': 'Поставки',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(verbose_name='Количество')),
                ('dish', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='Restora.dishes', verbose_name='Блюдо')),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Restora.order', verbose_name='Заказ')),
            ],
            options={
                'verbose_name': 'Состав заказа',
                'verbose_name_plural': 'Состав заказа',
            },
        ),
        migrations.CreateModel(
            name='Ingredients',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('unit', models.CharField(choices=[('KG', 'кг'), ('G', 'гр'), ('SHT', 'шт'), ('STL', 'ст.л.'), ('CHL', 'ч.л.')], default='KG', max_length=5, verbose_name='Единица измерения')),
                ('dishe', models.ForeignKey(default=None, on_delete=django.db.models.deletion.SET_DEFAULT, to='Restora.dishes', verbose_name='Блюдо')),
                ('product', models.ForeignKey(default=None, on_delete=django.db.models.deletion.SET_DEFAULT, to='Restora.products', verbose_name='Продукты')),
            ],
            options={
                'verbose_name': 'Ингредиент',
                'verbose_name_plural': 'Ингредиенты',
            },
        ),
        migrations.CreateModel(
            name='Employees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstName', models.CharField(max_length=20, verbose_name='Имя')),
                ('lastName', models.CharField(max_length=20, verbose_name='Фамилия')),
                ('phone', models.CharField(max_length=15, unique=True, validators=[django.core.validators.RegexValidator(regex='^(\\+375|80)-(29|25|44|33)-(\\d{3})(\\d{2})(\\d{2})$')], verbose_name='Телефон')),
                ('employeesPosition', models.CharField(max_length=20, verbose_name='Должность')),
                ('category', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='Restora.categoriesfood', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Сотрудник',
                'verbose_name_plural': 'Сотрудники',
            },
        ),
        migrations.CreateModel(
            name='Availabilitys',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beginning', models.DateTimeField(verbose_name='Начало брони')),
                ('end', models.DateTimeField(verbose_name='Окончание брони')),
                ('table', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='Restora.tables', verbose_name='Столик')),
            ],
            options={
                'verbose_name': 'Занятость',
                'verbose_name_plural': 'Занятость',
            },
        ),
        migrations.CreateModel(
            name='Administrators',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(default='', max_length=254)),
                ('level', models.CharField(max_length=10, verbose_name='Уровень доступа')),
                ('user', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='Restora.users', verbose_name='Пользователи')),
            ],
            options={
                'verbose_name': 'Администратор',
                'verbose_name_plural': 'Администраторы',
            },
        ),
    ]
